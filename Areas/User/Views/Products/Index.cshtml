@model X.PagedList.IPagedList<TechStore.Models.Product>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@using X.PagedList.Web.Common
@{
    ViewData["Title"] = "Products";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Products</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/User">Dashboard</a></li>
        <li class="breadcrumb-item active">Products</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div><i class="fas fa-table me-1"></i>Products List</div>
            <div class="d-flex">
                <form asp-action="Index" method="get" class="d-flex me-2">
                    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control me-2"
                        placeholder="Search products..." />
                    <button type="submit" class="btn btn-outline-primary">Search</button>
                </form>
                <a asp-action="Create" class="btn btn-primary">Create New</a>
            </div>
        </div>
        <div class="card-body">
            <table id="productsTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <img src="@item.ImageUrl" alt="@item.Name" style="max-width: 50px;" />
                            </td>
                            <td>@item.Name</td>
                            <td>@item.Category?.Name</td>
                            <td>@String.Format("{0:N0} â‚«", item.OriginalPrice)</td>
                            <td>@item.StockQuantity</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.ProductID" class="btn btn-primary btn-sm">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.ProductID" class="btn btn-info btn-sm">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.ProductID" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex justify-content-center mt-4">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
                {
                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                    MaximumPageNumbersToDisplay = 5,
                    UlElementClasses = new[] { "pagination" },
                    LiElementClasses = new[] { "page-item" },
                    PageClasses = new[] { "page-link" }
                })
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#productsTable').DataTable({
                "paging": false,
                "ordering": true,
                "info": false
            });
        });
    </script>
}
