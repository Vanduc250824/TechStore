@model TechStore.Models.Product

<div class="col-12 col-sm-6 col-md-4 col-lg-3">
    <div class="product-card h-100">
        <div class="card h-100 border-0 shadow-hover">
            <div class="position-relative overflow-hidden">
                @if (Model.DiscountedPrice.HasValue && Model.DiscountedPrice.Value < Model.OriginalPrice)
                {
                    var discount = Math.Round((1 - Model.DiscountedPrice.Value / Model.OriginalPrice) * 100);
                    <div class="discount-badge">-@discount%</div>
                }
                <a asp-area="User" asp-controller="Home" asp-action="Details" asp-route-id="@Model.ProductID">
                    <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/Images/zip.png" : Model.ImageUrl)" 
                         class="card-img-top p-3" alt="@Model.Name"
                         style="height: 200px; object-fit: contain;">
                </a>
            </div>
            <div class="card-body d-flex flex-column p-3">
                <h5 class="product-title">
                    <a asp-area="User" asp-controller="Home" asp-action="Details" asp-route-id="@Model.ProductID" 
                       class="text-decoration-none text-dark">@Model.Name</a>
                </h5>
                <div class="product-price mb-2">
                    @if (Model.DiscountedPrice.HasValue && Model.DiscountedPrice.Value < Model.OriginalPrice)
                    {
                        <div class="original-price">@Model.OriginalPrice.ToString("N0") đ</div>
                        <div class="discounted-price">@Model.DiscountedPrice.Value.ToString("N0") đ</div>
                    }
                    else
                    {
                        <div class="current-price">@Model.OriginalPrice.ToString("N0") đ</div>
                    }
                </div>
                <div class="mt-auto">
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="stock-status @(Model.StockQuantity > 0 ? "in-stock" : "out-of-stock")">
                            @(Model.StockQuantity > 0 ? "In Stock" : "Out of Stock")
                        </span>
                        @if (Model.StockQuantity > 0)
                        {
                            <button onclick="addToCart(@Model.ProductID)" class="btn btn-add-cart">
                                <i class="bi bi-cart-plus"></i>
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.product-card {
    transition: all 0.3s ease;
}

.product-card:hover {
    transform: translateY(-5px);
}

.shadow-hover {
    transition: box-shadow 0.3s ease;
}

.shadow-hover:hover {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.discount-badge {
    position: absolute;
    top: 0;
    right: 0;
    background-color: #dc3545;
    color: white;
    padding: 4px 8px;
    font-weight: bold;
    font-size: 14px;
    min-width: 45px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.product-title {
    font-size: 1rem;
    line-height: 1.4;
    margin-bottom: 0.75rem;
    height: 2.8em;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.product-title a:hover {
    color: #0d6efd !important;
}

.original-price {
    color: #6c757d;
    text-decoration: line-through;
    font-size: 0.9rem;
}

.discounted-price {
    color: #dc3545;
    font-weight: bold;
    font-size: 1.1rem;
}

.current-price {
    color: #dc3545;
    font-weight: bold;
    font-size: 1.1rem;
}

.product-rating {
    font-size: 0.85rem;
}

.stock-status {
    font-size: 0.85rem;
    padding: 4px 8px;
    border-radius: 4px;
}

.in-stock {
    color: #198754;
    background-color: #d1e7dd;
}

.out-of-stock {
    color: #dc3545;
    background-color: #f8d7da;
}

.btn-add-cart {
    padding: 6px 12px;
    font-size: 0.9rem;
    color: #0d6efd;
    background-color: transparent;
    border: 1px solid #0d6efd;
    border-radius: 20px;
    transition: all 0.2s ease;
}

.btn-add-cart:hover {
    color: white;
    background-color: #0d6efd;
}

.card-img-top {
    background-color: #f8f9fa;
    transition: transform 0.3s ease;
}

.card:hover .card-img-top {
    transform: scale(1.05);
}
</style>

<script>
function addToCart(productId) {
    fetch(`/User/Cart/AddToCart/${productId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            toastr.success('Product added to cart successfully');
            if (data.cartCount) {
                document.getElementById('cartCount').textContent = data.cartCount;
            }
        } else {
            toastr.error(data.message || 'Failed to add product to cart');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        toastr.error('An error occurred while adding to cart');
    });
}
</script> 